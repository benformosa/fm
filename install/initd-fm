#!/bin/bash
### BEGIN INIT INFO
# Provides:          fm
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Fleet Manager Rails web app
# Description:       Enable Fleet Manager service using Phusion Passenger.
#       Based on https://gist.github.com/naholyr/4275302
### END INIT INFO

# Default values if config file missing
APP=fm
PORT=443
SSL=true
SSL_CERT=/etc/ssl/certs/self-signed.pem
SSL_KEY=/etc/ssl/private/self-signed.key
USER=fm

# Get values from config file
source /etc/fm.sh

APPPATH="/srv/rails/$APP"
PIDFILE="/var/run/$APP.pid"
LOGFILE="/var/log/$APP.log"

SCRIPT="cd $APPPATH; passenger start -p $PORT --environment production --ssl --ssl-certificate $SSL_CERT --ssl-certificate-key $SSL_KEY --daemonize --user $USER --log-file $LOGFILE --pid-file $PIDFILE"

if [ "$SSL" = false ] ; then
  SCRIPT="cd $APPPATH; passenger start -p $PORT --environment production --daemonize --user $USER --log-file $LOGFILE --pid-file $PIDFILE"
fi

start() {
  if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
    echo "Service already running" >&2
    return 1
  fi
  echo "Starting serviceâ€¦" >&2
  su -c "$SCRIPT"
  echo "Service started" >&2
}

stop() {
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo "Service not running" >&2
    return 1
  fi
  echo "Stopping serviceâ€¦" >&2
  passenger stop --pid-file $PIDFILE && rm -f "$PIDFILE"
  echo "Service stopped" >&2
}

status() {
  passenger status --pid-file $PIDFILE
}

if [[ $EUID -ne 0 ]]; then
  echo "You must be root" 2>&1
  exit 1
else
  case "$1" in
    status)
      status
      ;;
    start)
      start
      ;;
    stop)
      stop
      ;;
    restart)
      stop
      start
      ;;
    *)
      echo "Usage: $0 {status|start|stop|restart}"
  esac
fi
